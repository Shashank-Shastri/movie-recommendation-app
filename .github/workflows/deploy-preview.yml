name: Deploy Preview

on:
    workflow_run:
        workflows:
            - Build Preview
        types:
            - completed

jobs:
    deploy_preview:
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        runs-on: ubuntu-latest
        steps:
            - name: Download artifact
              uses: dawidd6/action-download-artifact@v2
              with:
                workflow: build-preview.yml
                commit: ${{ github.event.workflow_run.head_sha }}
                name: dist

            - name: Deploy to Firebase
              id: deploy_preview
              uses: FirebaseExtended/action-hosting-deploy@v0
              with:
                repoToken: '${{ secrets.GITHUB_TOKEN }}'
                firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_MOVIE_RECOMMENDATION_77E17 }}'
                projectId: movie-recommendation-77e17
                channelId: 'pr-${{ github.event.workflow_run.head_branch }}'
              env:
                  FIREBASE_CLI_PREVIEWS: hostingchannels

            - name: Set comment message
              id: comment_message
              run: |
                EXPIRES=$(date --date='${{ steps.deploy_preview.outputs.expire_time }}')

                URL_1=${{ fromJSON(steps.deploy_preview.outputs.urls)[0] }}
                URL_2=${{ fromJSON(steps.deploy_preview.outputs.urls)[1] }}

                if $(${{ github.event.workflow_run.repository.fork }})
                then
                  THANKS=Thanks for your PR ðŸŽ‰
                else
                  THANKS=
                fi

                COMMENT_MESSAGE=$(cat << EOF
                $THANKS
                Visit the preview URL for this PR here:
                - [$URL_1]($URL_1)
                - [$URL_2]($URL_2)

                <sub>(expires $EXPIRES)</sub>
                EOF
                )

                echo "COMMENT_MESSAGE<<EOF" >> $GITHUB_ENV
                echo "$COMMENT_MESSAGE" >> $GITHUB_ENV
                echo "EOF" >> $GITHUB_ENV

            - name: Comment on PR
              uses: actions/github-script@v3
              env:
               COMMENT_MESSAGE: '${{ env.COMMENT_MESSAGE }}'
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  script: |
                    const { number: pr_number } = require(./event.json);
                    github.issues.createComment({
                      issue_number: pr_number,
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      body: process.env.COMMENT_MESSAGE
                    });
